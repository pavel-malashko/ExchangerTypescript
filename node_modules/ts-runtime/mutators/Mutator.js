"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util = require("../util");
var Mutator = /** @class */ (function () {
    function Mutator() {
    }
    Mutator.prototype.mutateNode = function (node, context) {
        this.context = context;
        this.node = node;
        if (!this.shouldMutate(node)) {
            return node;
        }
        if (this.shouldSkip(node)) {
            return node;
        }
        if (util.isAmbientDeclaration(node)) {
            return node;
        }
        return this.mutate(node);
    };
    Mutator.prototype.shouldMutate = function (node) {
        return node && util.asArray(this.kind).indexOf(node.kind) !== -1;
    };
    Object.defineProperty(Mutator.prototype, "options", {
        get: function () {
            return this.context.options;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Mutator.prototype, "factory", {
        get: function () {
            return this.context.factory;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Mutator.prototype, "scanner", {
        get: function () {
            return this.context.scanner;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Mutator.prototype, "skip", {
        get: function () {
            return this.context.skip.bind(this.context);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Mutator.prototype, "shouldSkip", {
        get: function () {
            return this.context.shouldSkip.bind(this.context);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Mutator.prototype, "map", {
        get: function () {
            return this.scanner.mapNode.bind(this.scanner);
        },
        enumerable: true,
        configurable: true
    });
    return Mutator;
}());
exports.Mutator = Mutator;
